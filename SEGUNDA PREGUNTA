from scipy.interpolate import CubicSpline
import numpy as np
import matplotlib.pyplot as plt


x = [-1,-0.5,0,1.5]
fx = [0.86199, 0.95802, 1.0986, 2.0986]

fxx = [0.15536, 1.45186]


b = np.array([(3/h[0])*(y[1]-y[0])-3*dy[0],
              (3/h[1])*(y[2]-y[1])-(3/h[0])*(y[1]-y[0]),
              (3/h[2])*(y[3]-y[2])-(3/h[1])*(y[2]-y[1]),
              (3*dy[1])-(3/h[2])*(y[3]-y[2])])

b = b[:, np.newaxis]
A = np.array([[2*h[0], h[0], 0, 0],
              [h[0],2*(h[0]+h[1]), h[1], 0],
              [0, h[0], 2*(h[0]+h[1]),h[1]],
              [0, 0, h[1], 2*h[1]]])


ci=np.dot(np.linalg.inv(A), b)


bi = np.array([(1/h[0])*(y[1]-y[0]) - (h[0]/3)*(ci[1] + 2*ci[0]),
               (1/h[1])*(y[2]-y[1]) - (h[1]/3)*(ci[2] + 2*ci[1]),
               (1/h[2])*(y[3]-y[2]) - (h[2]/3)*(ci[3] + 2*ci[2])])



di = np.array([(1/3*h[0])*(ci[1]-ci[0]),
               (1/3*h[1])*(ci[2]-ci[1]),
               (1/3*h[2])*(ci[3]-ci[2])])
print("Matriz: \n",b)
print("Matriz: \n‚Äù,A
print("ci: \n",ci)
print("bi: \n", bi)
print("di: \n",di)
